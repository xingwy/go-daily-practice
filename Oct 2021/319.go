// 条件：初始时有 n 个灯泡处于关闭状态。
// 具体：对某个灯泡切换开关意味着：如果灯泡状态为关闭，那该灯泡就会被开启；而灯泡状态为开启，那该灯泡就会被关闭。
// 第 1 轮，每个灯泡切换一次开关。即，打开所有的灯泡。
// 第 2 轮，每两个灯泡切换一次开关。 即，每两个灯泡关闭一个。
// 第 3 轮，每三个灯泡切换一次开关。
// ...
// 第 i 轮，每 i 个灯泡切换一次开关。 而第 n 轮，你只切换最后一个灯泡的开关。
// 问题：找出 n 轮后有多少个亮着的灯泡。

// 如何证明？
// 首先需要明白两点
// 1. 对于一个完全平方数，它有奇数个因子，其贡献值为1 
// 2. 对于一个非完全平方数，它只有偶数个因子，其贡献值为0

func bulbSwitch(n int) int {
	if n == 1 {
		return 1;
	}
	result := 1;
	for result*result <= n {
		result++;
	}
	return result-1;
}
